@model Autonomize.Models.Relatorio

@{
    ViewData["Title"] = "Criar Relatório";
}

<h1>Create</h1>

<h4>Relatorio</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TipoRelatorio" class="control-label"></label>
                <select asp-for="TipoRelatorio" class="form-control" asp-items="Html.GetEnumSelectList<TiposRelatorio>()" id="tipo-relatorio"></select>
                <span asp-validation-for="TipoRelatorio" class="text-danger"></span>
            </div>
            <div id="cliente">
                <div class="form-group">
                    @foreach (var cliente in ViewBag.Clientes)
                    {
                        <label class="control-label">
                            <input type="checkbox" name="Itens" value="@cliente.Id" /> @cliente.Nome
                        </label>
                    }
                </div>
            </div>
            <div id="produto">
                <div class="form-group">
                    @foreach (var produto in ViewBag.Produtos)
                    {
                        <label class="control-label">
                            <input type="checkbox" name="Itens" value="@produto.Id" /> @produto.Nome
                        </label>
                    }
                </div>
            </div>

            <div id="historico">
                <div class="form-group" >
                    <label asp-for="TipoItem" class="control-label"></label>
                    <select asp-for="TipoItem" class="form-control" asp-items="Html.GetEnumSelectList<TiposItem>()"></select>
                    <span asp-validation-for="TipoItem" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TipoAlteracao" class="control-label"></label>
                    <select asp-for="TipoAlteracao" class="form-control" asp-items="Html.GetEnumSelectList<TiposAlteracao>()"></select>
                    <span asp-validation-for="TipoAlteracao" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="DataInicio" class="control-label"></label>
                <input asp-for="DataInicio" class="form-control" />
                <span asp-validation-for="DataInicio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataFinal" class="control-label"></label>
                <input asp-for="DataFinal" class="form-control" />
                <span asp-validation-for="DataFinal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Adicionar" class="btn btn-success " />
                <a asp-action="Index" class="btn btn-danger">Cancelar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>

         function none(content){
            content.style.display = "none";
        }

        function show (content){
            content.style.display = "block";
        }

        const cliente = document.querySelector("#cliente");
        const produto = document.querySelector("#produto");
        const historico = document.querySelector("#historico");
        let tiposRelatorio = document.querySelector("#tipo-relatorio")

        none(cliente);
        none(produto);
        show(historico);
        tiposRelatorio.addEventListener("change", function(){
            switch(tiposRelatorio.value){
                case '0':
                    none(cliente);
                    none(produto);
                    show(historico);
                    break;

                case '1':
                    none(cliente);
                    none(produto);
                    none(historico);
                    break;

                case '2':
                    none(cliente);
                    show(produto);
                    none(historico);
                    break;

                case '3':
                    show(cliente);
                    none(produto);
                    none(historico);
                    break;
            }
        });
        
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
